/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 13 23:41:01 GMT 2020
 */

package es.uca.muiisc.psi;

import org.junit.Test;
import static org.junit.Assert.*;
import es.uca.muiisc.psi.Guest;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Guest_ESTest extends Guest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("X$ur^k4Cvib&^hy", "X$ur^k4Cvib&^hy", "(6<}l$^s$#4Gua", localDate0, (String) null);
      String string0 = guest0.getPhoneNumber();
      assertNull(string0);
      assertEquals("(6<}l$^s$#4Gua", guest0.getPassport());
      assertEquals("X$ur^k4Cvib&^hy", guest0.getFirstName());
      assertEquals("X$ur^k4Cvib&^hy", guest0.getLastName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("#]k3i8", (String) null, (String) null, localDate0, "");
      assertEquals("", guest0.getPhoneNumber());
      
      guest0.setPhoneNumber("];Z:)@yq`t");
      guest0.getPhoneNumber();
      assertEquals("#]k3i8", guest0.getFirstName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("#]k3i8", (String) null, (String) null, localDate0, "");
      guest0.setPassport("];Z:)@yq`t");
      guest0.getPassport();
      assertEquals("#]k3i8", guest0.getFirstName());
      assertEquals("", guest0.getPhoneNumber());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("#]k3i8", (String) null, (String) null, localDate0, "");
      guest0.setPassport("");
      guest0.getPassport();
      assertEquals("", guest0.getPhoneNumber());
      assertEquals("#]k3i8", guest0.getFirstName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("Z)*mFl{oL5-", "yZCn", "yZCn", localDate0, "");
      String string0 = guest0.getLastName();
      assertEquals("yZCn", string0);
      assertEquals("Z)*mFl{oL5-", guest0.getFirstName());
      assertEquals("", guest0.getPhoneNumber());
      assertEquals("yZCn", guest0.getPassport());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Guest guest0 = new Guest("", "", "", (LocalDate) null, "");
      String string0 = guest0.getLastName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Guest guest0 = new Guest((String) null, (String) null, "G>nx0p@^Op", (LocalDate) null, "1PEnc.");
      String string0 = guest0.getFirstName();
      assertEquals("1PEnc.", guest0.getPhoneNumber());
      assertNull(string0);
      assertEquals("G>nx0p@^Op", guest0.getPassport());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Guest guest0 = new Guest("", "M2th[AX)4wV#S", "", (LocalDate) null, "M2th[AX)4wV#S");
      String string0 = guest0.getFirstName();
      assertEquals("", string0);
      assertEquals("M2th[AX)4wV#S", guest0.getPhoneNumber());
      assertEquals("M2th[AX)4wV#S", guest0.getLastName());
      assertEquals("", guest0.getPassport());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Guest guest0 = new Guest("", "M2th[AX)4wV#S", "", (LocalDate) null, "M2th[AX)4wV#S");
      guest0.getDateBirth();
      assertEquals("M2th[AX)4wV#S", guest0.getLastName());
      assertEquals("", guest0.getPassport());
      assertEquals("", guest0.getFirstName());
      assertEquals("M2th[AX)4wV#S", guest0.getPhoneNumber());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.of(0, 1, 1);
      Guest guest0 = new Guest("Eo'p/rvU@_h.9#F", "Eo'p/rvU@_h.9#F", "Eo'p/rvU@_h.9#F", localDate0, "Eo'p/rvU@_h.9#F");
      String string0 = guest0.getFirstName();
      assertEquals("Eo'p/rvU@_h.9#F", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("#]k3i8", (String) null, (String) null, localDate0, "");
      String string0 = guest0.getLastName();
      assertEquals("", guest0.getPhoneNumber());
      assertNull(string0);
      assertEquals("#]k3i8", guest0.getFirstName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("#]k3i8", (String) null, (String) null, localDate0, "");
      String string0 = guest0.getPhoneNumber();
      assertEquals("", string0);
      assertEquals("#]k3i8", guest0.getFirstName());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("#]k3i8", (String) null, (String) null, localDate0, "");
      guest0.setLastName((String) null);
      assertEquals("#]k3i8", guest0.getFirstName());
      assertEquals("", guest0.getPhoneNumber());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("#]k3i8", (String) null, (String) null, localDate0, "");
      assertEquals("#]k3i8", guest0.getFirstName());
      
      guest0.setFirstName((String) null);
      assertEquals("", guest0.getPhoneNumber());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("#]k3i8", (String) null, (String) null, localDate0, "");
      String string0 = guest0.getPassport();
      assertEquals("", guest0.getPhoneNumber());
      assertNull(string0);
      assertEquals("#]k3i8", guest0.getFirstName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Guest guest0 = new Guest("#]k3i8", (String) null, (String) null, localDate0, "");
      guest0.getDateBirth();
      assertEquals("#]k3i8", guest0.getFirstName());
      assertEquals("", guest0.getPhoneNumber());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.of(0, 1, 1);
      Guest guest0 = new Guest("Eo'p/rvU@_h.9#F", "Eo'p/rvU@_h.9#F", "Eo'p/rvU@_h.9#F", localDate0, "Eo'p/rvU@_h.9#F");
      guest0.setDateBirth(localDate0);
      assertEquals("Eo'p/rvU@_h.9#F", guest0.getLastName());
  }
}
