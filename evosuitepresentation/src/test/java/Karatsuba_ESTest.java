/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 13 23:40:53 GMT 2020
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Karatsuba_ESTest extends Karatsuba_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.pow(846);
      BigInteger bigInteger2 = Karatsuba.karatsuba(bigInteger0, bigInteger1);
      assertEquals((short)0, bigInteger2.shortValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2000);
      BigInteger bigInteger0 = BigInteger.probablePrime(2000, mockRandom0);
      BigInteger bigInteger1 = Karatsuba.karatsuba(bigInteger0, bigInteger0);
      assertEquals((short)15193, bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-85);
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = bigInteger1.pow(846);
      BigInteger bigInteger3 = Karatsuba.karatsuba(bigInteger2, bigInteger0);
      assertTrue(bigInteger3.equals((Object)bigInteger2));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Karatsuba.karatsuba((BigInteger) null, (BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Karatsuba", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Karatsuba karatsuba0 = new Karatsuba();
  }
}
